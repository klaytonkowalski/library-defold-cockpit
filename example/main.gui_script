--------------------------------------------------------------------------------
-- License
--------------------------------------------------------------------------------

-- Copyright (c) 2024 Klayton Kowalski

-- This software is provided 'as-is', without any express or implied warranty.
-- In no event will the authors be held liable for any damages arising from the use of this software.

-- Permission is granted to anyone to use this software for any purpose,
-- including commercial applications, and to alter it and redistribute it freely,
-- subject to the following restrictions:

-- 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software.
--    If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.

-- 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.

-- 3. This notice may not be removed or altered from any source distribution.

--------------------------------------------------------------------------------
-- Information
--------------------------------------------------------------------------------

-- GitHub: https://github.com/klaytonkowalski/library-defold-cockpit

--------------------------------------------------------------------------------
-- Dependencies
--------------------------------------------------------------------------------

local cockpit = require "cockpit.cockpit"

--------------------------------------------------------------------------------
-- Constants
--------------------------------------------------------------------------------

local message_acquire_input_focus = hash("acquire_input_focus")

local color_idle = vmath.vector4(0.7, 0.7, 0.7, 1)
local color_over = vmath.vector4(1, 1, 1, 1)
local color_down = vmath.vector4(0.7, 1, 0.7, 1)

-- These GUI nodes are set in the `cache_nodes()` function.
local node_exit_button = nil

--------------------------------------------------------------------------------
-- Variables
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Local Functions
--------------------------------------------------------------------------------

-- Called on any component state change.
-- If the component is down, then it turns green.
-- If the component is over, then it turns white.
-- If the component is idle (not down or over), then it turns gray.
local function component_callback(node, over, down, data)
	if over and down then
		gui.set_color(node, color_down)
	elseif over then
		gui.set_color(node, color_over)
	else
		gui.set_color(node, color_idle)
	end
end

-- Caches each of the `node_` constants so that we don't have to repeatedly call `gui.get_node()`.
local function cache_nodes()
	node_exit_button = gui.get_node(hash("node_exit_button"))
end

-- Creates every component.
local function create_components()
	cockpit.create_button(node_exit_button, component_callback)
end

--------------------------------------------------------------------------------
-- Engine Functions
--------------------------------------------------------------------------------

function init()
	msg.post(msg.url(), message_acquire_input_focus)
	cache_nodes()
	create_components()
end

function on_input(_, action_id, action)
	cockpit.on_input(action_id, action)
end